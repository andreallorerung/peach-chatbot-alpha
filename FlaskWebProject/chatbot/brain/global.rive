! version = 2.00

! array desire = desir|wish|want|would lik|wann|let us
! array change = chang|switch|adjust|alt|mod|turn
! array topicmacro = physical|practical|family|emotional|spiritual
! array discuss = talk|speak|discuss
! array other = oth|anoth|someth els
! array topic = top|concern|issu|problem

+ set glob
- Topic set to global
^ {topic=global}

+ set (@topicmacro)
- Topic set to <star>{topic=<star>}{@ highlighted}

> topic global

    // desire to change topic
    + [*] (@desire) (@change) [*] (@topic) [pleas]
    - What other {random}topic concern{/random} would you like to {random}discuss|talk about{/random}{random} instead|{/random}?
    - What would you like to talk about?

    // desire to change topic *
    + [*] (@desire) (@change) [*] (@topic) *
    - {@ desir chang top} {@ <star3>}

    // not desire to change topic
    + [*] (@not) (@desire) (@change) [*] (@topic) [*]
    - Ok, let's not change the topic then.
    - Ok, we will stay on the topic then.

    // desire to discuss other (redirects to desire change topic)
    + [*] (@desire) (@discuss) (@other) [@topic]
    - {@ desir chang top}

    // topicmacro (follow up to "desire to change topic")
    + [*] (@topicmacro) [concern]
    % what other topic would you like to talk about instead?
    - {@ discuss <star1>}

    // discuss topicmacro
    + [*] (@discuss) [*] (@topicmacro) [concern] [*]
    - Ok, let's talk about <star2> concerns.
    ^ <set physicalissue=None>
    ^ <set macrotopic=invalid>
    ^ <set microtopic=invalid>
    ^ {topic=<star2>}

    // the following variables where used to experiment and solve the issue
    // with inconsistent internal uservariable state when setting uservars
    // values from inside python macros.
    //^ <set anotherUserVar=notTheValueISet>
    //^ <set anotherNumericalVar=1>
    //- Let's talk about <star2> then.{topic=<star2>}

    // next topic
    + next (@topic)
    * <call>getNextConcernMacroTopic</call> eq None => \sI believe we have\s
    ^ covered all the concerns that had been highlighted.
    - Ok, let's move on to the next topic: <call>getNextConcern</call>, which\s
    ^ is in the category of <call>getNextConcernMacroTopic</call> problems.
    ^ {@ set <get macrotopic>}

    //^ \nValue of "anotherUserVar" according to "get" called from the rivescript
    //^ file: <get anotherUserVar>
    //^ \nValue of "anotherNumericalVar" according to "get" called from the rivescript
    //^ file: <get anotherNumericalVar>
    //^ \nValue of "macrotopic" according to "get" called from the rivescript
    //^ file: <get macrotopic>\n
    //^ Values of all uservars (for the current user) retrieved from python macro: <call>showUservars</call>

    + set glob
    - Topic set to global{topic=global}

    + set (@topicmacro)
    - Topic set to <star>{topic=<star>}

    + internal matcher to move to the next topic
    * <call>shouldMakeQuery</call> eq True => Before we move on, since you were\s
    ^ very distressed about the issue, would you like to have information about\s
    ^ how to confront it?
    - <call>setNextTopic macrotopic</call>

    //^ <call>setAnotherUserVar</call>
    //^ <call>setAnotherNumericalVar</call>
    // the above show that modifying uservars through macros is not reflected in
    // their value as evaluated from the same reply. This causes temporary
    // inconsitencies that took days worth of work to debug.

    + (@yes)
    % before we move on, since you were very distressed about the issue, would you like to have information about how to confront it?
    - You can find more information here: {{ '<call>getNextConcern</call>' }}<call>setNextTopic macrotopic</call>

    + (@no)
    % before we move on, since you were very distressed about the issue, would you like to have information about how to confront it?
    - <call>setNextTopic macrotopic</call>
< topic
